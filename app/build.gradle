apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "in.kudu.joke"
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        free {
            applicationId "in.kudu.joke.free"
            versionName "1.0-free"
        }
        paid {
            applicationId "in.kudu.joke.full"
            versionName "1.0"
        }

    }
    testOptions {
        unitTests.all {
            // All the usual Gradle options.
            jvmArgs '-XX:MaxPermSize=256m'
            unitTests.returnDefaultValues = true
            resultsDir = "${project.buildDir}/results"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // Added for AdMob
    freeCompile 'com.google.android.gms:play-services-ads:9.0.2'
    compile project(path: ':joke-viewer')
    //compile project(path: ':joke-provider')
    compile 'com.android.support:support-v4:23.1.1'
    compile project(path: ':backend', configuration: 'android-endpoints')
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    // Optional -- Hamcrest library
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"
}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
}


task runAppEngine(dependsOn: ":backend:appengineRun") {
    project(":backend").afterEvaluate { backend ->
        backend.extensions.appengine.daemon = true
    }

    doLast {
        println "Started Server!"
    }
}

runAppEngine.finalizedBy "runAllTestCases"

task runAllTestCases(dependsOn: "connectedCheck") {
    doLast {
        println "All Tests Done!"
    }
}

runAllTestCases.finalizedBy ":backend:appengineStop"

